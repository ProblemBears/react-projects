REACT SUMMARY & CORE FEATURES
    -How React Works and                        * A Component is a regular JS function that returns something that can be rendered ( Ex: plain text, but usually JSX (JS HTML) )
     Understanding Components:                  * These components should reside in their own .js files and be exported in a CommonJS style (Ex: export default App;)

    -Building & Re-Using Another                * CONVENTION:   ** Place new .js components in a ./src/components directory
     Component:                                                 ** Component names should start with a capital letter (ex: function SomeComponent() {})

                                                * Import with:  ** import SomeComponent from './components/SomeComponent'
                                                
                                                * THEN:         ** We can use the component with < SomeComponent />

    -Working with "props" &                     * SCENARIO:     ** We need to pass in data to a component (ex: We need different titles for the same component spawned 3 times)
     Dynamic Content:                           
                                                * HOW:          ** Pass the values by defining attributes (they can be any name)
                                                                        *** < SomeComponent someAttrib1="someVal" someAttrib2="SomeVal" />
                                                                ** Accept the attributes by defining a props parameter in your component.
                                                                        *** function SomeComponent(props) {} //props has those attributes as properties
                                                                ** To use the properties we can't simply use props.someAttrib1 in JSX. WE HAVE TO WRAP DYNAMIC
                                                                   CONTENT FROM JavaScript WITH {}

    -Handling Events:                           * SCENARIO:     ** We need to listen to a click on a Components button

                                                * HOW:          ** PREREQ: The HTML elements in REACT are really just REACT components built into it
                                                                ** The previous statement matters because we can add built-in attributes that don't exist in HTML
                                                                   such as the:          onClick={ someFunctionDefinedElsewhere} //don't use () because it'll execute

                                                * USEFUL:       ** For functions that need to reference properties from props. You should define them inside of
                                                                  the main Component.

    -Introducing State:                         * SCENARIO:     ** In order to change what's visible on the screen we need to change the State (ex: overlay open/closed)
                                                
                                                * HOW:          1) Import the function:     ** import {useState} from 'react';

                                                                2) To ready the state,      ** Think of React State as a variable, managed by React.
                                                                   the following is         ** const [modalIsOpen, setModalIsOpen] = useState(false);
                                                                   inserted at the                      *** Initial Value = false
                                                                   start of the                         *** Destructured [0] = The currently stored value
                                                                   Component Function:                  *** Destructured [1] = A function that allows you to change [0]
                                                                                                                **** We choose to call [1] instead of directly changing
                                                                                                                     [0] because [1] reexecutes all of the Component
                                                                                                                     function (hence, rerenders)
                                                                                            ** Finally, after destructuring/naming the bidnings that were yielded by
                                                                                               useState. Maybe on an onClick's handler function we can do:
                                                                                                            setModalIsOpen(true);
                                                                                               and somwhere in our return() statement we can use modalIsOpen with
                                                                                               a conditional statement like the ternary (?:) in order to render some
                                                                                               Components OR render null.

    -Working w/ "Event Props"                   * SCENARIO:     ** Previously we used the JSX attribute onClick to Handle the event of clicking on a JSX Button.
     (Passing Function As Props):                                  WE CAN NOT USE onClick on SELF MADE COMPONENTS AND EXPECT IT TO WORK because onClick is built into
                                                                   JSX. We need to do something with the Function Pointer that was passed in props.

                                                * HOW:          ** Our Self-Made Component may have a return statement that returns JSX, therefore, in it's
                                                                    onClick that is built-in, we can call our props.onClick (remember though, onClick is just the name
                                                                    of the attribute we sent via our props, it does not have to be named onClick because it's not 
                                                                    built-in)